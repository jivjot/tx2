CREATE OR REPLACE FUNCTION SecurityGroupContent_Insert(
  Group_id integer,
  ContentType_id integer,
  Permission_id integer,
  State_id integer,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    ctid INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;
ctid := 0;

IF EXISTS ( SELECT id FROM "Security_securitygroupcontent" WHERE "Group"=Group_id AND "ContentType_id"=ContentType_id AND "Permission_id"=Permission_id AND "State_id"=State_id AND "Active"=1) THEN
	result := 2;
  	rescode := 81;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,'Insert','securitygroupcontent','Security');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

INSERT INTO "Security_securitygroupcontent"(
              "Group", "ContentType_id", "Permission_id", "State_id", "Active")
       VALUES(Group_id,ContentType_id,Permission_id,State_id,1);

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 82;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "Security_securitygroupcontent" 
	  WHERE "Group"=Group_id AND 
	  "ContentType_id"=ContentType_id AND 
	  "Permission_id"=Permission_id AND 
	  "State_id"=State_id AND 
	  "Active"=1;


INSERT INTO "Security_securitylogs"(id, "User", "ContentType_id", "TimeStamp", ip, "Desc")
				VALUES(rescode,by_user,ContentType_id,now(),ip,'Insert');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


